pub struct Opcode {
    pub opcode: u8,
    pub mnemonic: &'static str,
    pub bytes: u8,
    pub cycles: &'static [i32],
}

pub const OPCODES: &[Opcode] = &[
    Opcode { opcode: 0x00, mnemonic: "NOP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x01, mnemonic: "LD", bytes: 3, cycles: &[12] },
    Opcode { opcode: 0x02, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x03, mnemonic: "INC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x04, mnemonic: "INC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x05, mnemonic: "DEC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x06, mnemonic: "LD", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x07, mnemonic: "RLCA", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x08, mnemonic: "LD", bytes: 3, cycles: &[20] },
    Opcode { opcode: 0x09, mnemonic: "ADD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x0A, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x0B, mnemonic: "DEC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x0C, mnemonic: "INC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x0D, mnemonic: "DEC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x0E, mnemonic: "LD", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x0F, mnemonic: "RRCA", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x10, mnemonic: "STOP", bytes: 2, cycles: &[4] },
    Opcode { opcode: 0x11, mnemonic: "LD", bytes: 3, cycles: &[12] },
    Opcode { opcode: 0x12, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x13, mnemonic: "INC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x14, mnemonic: "INC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x15, mnemonic: "DEC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x16, mnemonic: "LD", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x17, mnemonic: "RLA", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x18, mnemonic: "JR", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x19, mnemonic: "ADD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x1A, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x1B, mnemonic: "DEC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x1C, mnemonic: "INC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x1D, mnemonic: "DEC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x1E, mnemonic: "LD", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x1F, mnemonic: "RRA", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x20, mnemonic: "JR", bytes: 2, cycles: &[12, 8] },
    Opcode { opcode: 0x21, mnemonic: "LD", bytes: 3, cycles: &[12] },
    Opcode { opcode: 0x22, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x23, mnemonic: "INC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x24, mnemonic: "INC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x25, mnemonic: "DEC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x26, mnemonic: "LD", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x27, mnemonic: "DAA", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x28, mnemonic: "JR", bytes: 2, cycles: &[12, 8] },
    Opcode { opcode: 0x29, mnemonic: "ADD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x2A, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x2B, mnemonic: "DEC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x2C, mnemonic: "INC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x2D, mnemonic: "DEC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x2E, mnemonic: "LD", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x2F, mnemonic: "CPL", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x30, mnemonic: "JR", bytes: 2, cycles: &[12, 8] },
    Opcode { opcode: 0x31, mnemonic: "LD", bytes: 3, cycles: &[12] },
    Opcode { opcode: 0x32, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x33, mnemonic: "INC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x34, mnemonic: "INC", bytes: 1, cycles: &[12] },
    Opcode { opcode: 0x35, mnemonic: "DEC", bytes: 1, cycles: &[12] },
    Opcode { opcode: 0x36, mnemonic: "LD", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x37, mnemonic: "SCF", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x38, mnemonic: "JR", bytes: 2, cycles: &[12, 8] },
    Opcode { opcode: 0x39, mnemonic: "ADD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x3A, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x3B, mnemonic: "DEC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x3C, mnemonic: "INC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x3D, mnemonic: "DEC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x3E, mnemonic: "LD", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x3F, mnemonic: "CCF", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x40, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x41, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x42, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x43, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x44, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x45, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x46, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x47, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x48, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x49, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x4A, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x4B, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x4C, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x4D, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x4E, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x4F, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x50, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x51, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x52, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x53, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x54, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x55, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x56, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x57, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x58, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x59, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x5A, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x5B, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x5C, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x5D, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x5E, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x5F, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x60, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x61, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x62, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x63, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x64, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x65, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x66, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x67, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x68, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x69, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x6A, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x6B, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x6C, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x6D, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x6E, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x6F, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x70, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x71, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x72, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x73, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x74, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x75, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x76, mnemonic: "HALT", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x77, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x78, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x79, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x7A, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x7B, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x7C, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x7D, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x7E, mnemonic: "LD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x7F, mnemonic: "LD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x80, mnemonic: "ADD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x81, mnemonic: "ADD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x82, mnemonic: "ADD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x83, mnemonic: "ADD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x84, mnemonic: "ADD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x85, mnemonic: "ADD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x86, mnemonic: "ADD", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x87, mnemonic: "ADD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x88, mnemonic: "ADC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x89, mnemonic: "ADC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x8A, mnemonic: "ADC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x8B, mnemonic: "ADC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x8C, mnemonic: "ADC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x8D, mnemonic: "ADC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x8E, mnemonic: "ADC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x8F, mnemonic: "ADC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x90, mnemonic: "SUB", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x91, mnemonic: "SUB", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x92, mnemonic: "SUB", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x93, mnemonic: "SUB", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x94, mnemonic: "SUB", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x95, mnemonic: "SUB", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x96, mnemonic: "SUB", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x97, mnemonic: "SUB", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x98, mnemonic: "SBC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x99, mnemonic: "SBC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x9A, mnemonic: "SBC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x9B, mnemonic: "SBC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x9C, mnemonic: "SBC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x9D, mnemonic: "SBC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0x9E, mnemonic: "SBC", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0x9F, mnemonic: "SBC", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA0, mnemonic: "AND", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA1, mnemonic: "AND", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA2, mnemonic: "AND", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA3, mnemonic: "AND", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA4, mnemonic: "AND", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA5, mnemonic: "AND", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA6, mnemonic: "AND", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0xA7, mnemonic: "AND", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA8, mnemonic: "XOR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xA9, mnemonic: "XOR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xAA, mnemonic: "XOR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xAB, mnemonic: "XOR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xAC, mnemonic: "XOR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xAD, mnemonic: "XOR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xAE, mnemonic: "XOR", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0xAF, mnemonic: "XOR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB0, mnemonic: "OR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB1, mnemonic: "OR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB2, mnemonic: "OR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB3, mnemonic: "OR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB4, mnemonic: "OR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB5, mnemonic: "OR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB6, mnemonic: "OR", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0xB7, mnemonic: "OR", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB8, mnemonic: "CP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xB9, mnemonic: "CP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xBA, mnemonic: "CP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xBB, mnemonic: "CP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xBC, mnemonic: "CP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xBD, mnemonic: "CP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xBE, mnemonic: "CP", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0xBF, mnemonic: "CP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xC0, mnemonic: "RET", bytes: 1, cycles: &[20, 8] },
    Opcode { opcode: 0xC1, mnemonic: "POP", bytes: 1, cycles: &[12] },
    Opcode { opcode: 0xC2, mnemonic: "JP", bytes: 3, cycles: &[16, 12] },
    Opcode { opcode: 0xC3, mnemonic: "JP", bytes: 3, cycles: &[16] },
    Opcode { opcode: 0xC4, mnemonic: "CALL", bytes: 3, cycles: &[24, 12] },
    Opcode { opcode: 0xC5, mnemonic: "PUSH", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xC6, mnemonic: "ADD", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC7, mnemonic: "RST", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xC8, mnemonic: "RET", bytes: 1, cycles: &[20, 8] },
    Opcode { opcode: 0xC9, mnemonic: "RET", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xCA, mnemonic: "JP", bytes: 3, cycles: &[16, 12] },
    Opcode { opcode: 0xCB, mnemonic: "PREFIX CB", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xCC, mnemonic: "CALL", bytes: 3, cycles: &[24, 12] },
    Opcode { opcode: 0xCD, mnemonic: "CALL", bytes: 3, cycles: &[24] },
    Opcode { opcode: 0xCE, mnemonic: "ADC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xCF, mnemonic: "RST", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xD0, mnemonic: "RET", bytes: 1, cycles: &[20, 8] },
    Opcode { opcode: 0xD1, mnemonic: "POP", bytes: 1, cycles: &[12] },
    Opcode { opcode: 0xD2, mnemonic: "JP", bytes: 3, cycles: &[16, 12] },
    Opcode { opcode: 0xD3, mnemonic: "ILLEGAL_D3", bytes: 1, cycles: &[4] }, 
    Opcode { opcode: 0xD4, mnemonic: "CALL", bytes: 3, cycles: &[24, 12] },
    Opcode { opcode: 0xD5, mnemonic: "PUSH", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xD6, mnemonic: "SUB", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD7, mnemonic: "RST", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xD8, mnemonic: "RET", bytes: 1, cycles: &[20, 8] },
    Opcode { opcode: 0xD9, mnemonic: "RETI", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xDA, mnemonic: "JP", bytes: 3, cycles: &[16, 12] },
    Opcode { opcode: 0xDB, mnemonic: "ILLEGAL_DB", bytes: 1, cycles: &[4] }, 
    Opcode { opcode: 0xDC, mnemonic: "CALL", bytes: 3, cycles: &[24, 12] },
    Opcode { opcode: 0xDD, mnemonic: "ILLEGAL_DD", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xDE, mnemonic: "SBC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xDF, mnemonic: "RST", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xE0, mnemonic: "LDH", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xE1, mnemonic: "POP", bytes: 1, cycles: &[12] },
    Opcode { opcode: 0xE2, mnemonic: "LDH", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0xE3, mnemonic: "ILLEGAL_E3", bytes: 1, cycles: &[4] }, 
    Opcode { opcode: 0xE4, mnemonic: "ILLEGAL_E4", bytes: 1, cycles: &[4] }, 
    Opcode { opcode: 0xE5, mnemonic: "PUSH", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xE6, mnemonic: "AND", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE7, mnemonic: "RST", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xE8, mnemonic: "ADD SP", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0xE9, mnemonic: "JP", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xEA, mnemonic: "LD", bytes: 3, cycles: &[16] },
    Opcode { opcode: 0xEB, mnemonic: "ILLEGAL_EB", bytes: 1, cycles: &[4] }, 
    Opcode { opcode: 0xEC, mnemonic: "ILLEGAL_EC", bytes: 1, cycles: &[4] }, 
    Opcode { opcode: 0xED, mnemonic: "ILLEGAL_ED", bytes: 1, cycles: &[4] }, 
    Opcode { opcode: 0xEE, mnemonic: "XOR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xEF, mnemonic: "RST", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xF0, mnemonic: "LDH", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xF1, mnemonic: "POP", bytes: 1, cycles: &[12] },
    Opcode { opcode: 0xF2, mnemonic: "LDH", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0xF3, mnemonic: "DI", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xF4, mnemonic: "ILLEGAL_F4", bytes: 1, cycles: &[4] }, 
    Opcode { opcode: 0xF5, mnemonic: "PUSH", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xF6, mnemonic: "OR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF7, mnemonic: "RST", bytes: 1, cycles: &[16] },
    Opcode { opcode: 0xF8, mnemonic: "LD HL", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xF9, mnemonic: "LD SP", bytes: 1, cycles: &[8] },
    Opcode { opcode: 0xFA, mnemonic: "LD", bytes: 3, cycles: &[16] },
    Opcode { opcode: 0xFB, mnemonic: "EI", bytes: 1, cycles: &[4] },
    Opcode { opcode: 0xFC, mnemonic: "ILLEGAL_FC", bytes: 4, cycles: &[1] }, 
    Opcode { opcode: 0xFD, mnemonic: "ILLEGAL_FD", bytes: 4, cycles: &[1] }, 
    Opcode { opcode: 0xFE, mnemonic: "CP", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xFF, mnemonic: "RST", bytes: 1, cycles: &[16] },
];

pub const CB_OPCODES: &[Opcode] = &[
    Opcode { opcode: 0x00, mnemonic: "RLC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x01, mnemonic: "RLC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x02, mnemonic: "RLC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x03, mnemonic: "RLC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x04, mnemonic: "RLC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x05, mnemonic: "RLC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x06, mnemonic: "RLC", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0x07, mnemonic: "RLC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x08, mnemonic: "RRC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x09, mnemonic: "RRC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x0A, mnemonic: "RRC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x0B, mnemonic: "RRC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x0C, mnemonic: "RRC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x0D, mnemonic: "RRC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x0E, mnemonic: "RRC", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0x0F, mnemonic: "RRC", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x10, mnemonic: "RL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x11, mnemonic: "RL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x12, mnemonic: "RL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x13, mnemonic: "RL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x14, mnemonic: "RL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x15, mnemonic: "RL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x16, mnemonic: "RL", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0x17, mnemonic: "RL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x18, mnemonic: "RR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x19, mnemonic: "RR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x1A, mnemonic: "RR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x1B, mnemonic: "RR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x1C, mnemonic: "RR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x1D, mnemonic: "RR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x1E, mnemonic: "RR", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0x1F, mnemonic: "RR", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x20, mnemonic: "SLA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x21, mnemonic: "SLA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x22, mnemonic: "SLA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x23, mnemonic: "SLA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x24, mnemonic: "SLA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x25, mnemonic: "SLA", bytes: 2, cycles: &[8] },
	Opcode { opcode: 0x26, mnemonic: "SLA", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0x27, mnemonic: "SLA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x28, mnemonic: "SRA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x29, mnemonic: "SRA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x2A, mnemonic: "SRA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x2B, mnemonic: "SRA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x2C, mnemonic: "SRA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x2D, mnemonic: "SRA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x2E, mnemonic: "SRA", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0x2F, mnemonic: "SRA", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x30, mnemonic: "SWAP", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x31, mnemonic: "SWAP", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x32, mnemonic: "SWAP", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x33, mnemonic: "SWAP", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x34, mnemonic: "SWAP", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x35, mnemonic: "SWAP", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x36, mnemonic: "SWAP", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0x37, mnemonic: "SWAP", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x38, mnemonic: "SRL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x39, mnemonic: "SRL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x3A, mnemonic: "SRL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x3B, mnemonic: "SRL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x3C, mnemonic: "SRL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x3D, mnemonic: "SRL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x3E, mnemonic: "SRL", bytes: 2, cycles: &[16] },
    Opcode { opcode: 0x3F, mnemonic: "SRL", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x40, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x41, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x42, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x43, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x44, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x45, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x46, mnemonic: "BIT", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x47, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x48, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x49, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x4A, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x4B, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x4C, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x4D, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x4E, mnemonic: "BIT", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x4F, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x50, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x51, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x52, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x53, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x54, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x55, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x56, mnemonic: "BIT", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x57, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x58, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x59, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x5A, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x5B, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x5C, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x5D, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x5E, mnemonic: "BIT", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x5F, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x60, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x61, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x62, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x63, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x64, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x65, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x66, mnemonic: "BIT", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x67, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x68, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x69, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x6A, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x6B, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x6C, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x6D, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x6E, mnemonic: "BIT", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x6F, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x70, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x71, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x72, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x73, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x74, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x75, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x76, mnemonic: "BIT", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x77, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x78, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x79, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x7A, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x7B, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x7C, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x7D, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x7E, mnemonic: "BIT", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x7F, mnemonic: "BIT", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x80, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x81, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x82, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x83, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x84, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x85, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x86, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x87, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x88, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x89, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x8A, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x8B, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x8C, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x8D, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x8E, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x8F, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x90, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x91, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x92, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x93, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x94, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x95, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x96, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x97, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x98, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x99, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x9A, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x9B, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x9C, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x9D, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0x9E, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0x9F, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA0, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA1, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA2, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA3, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA4, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA5, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA6, mnemonic: "SET", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xA7, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA8, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xA9, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xAA, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xAB, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xAC, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xAD, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xAE, mnemonic: "SET", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xAF, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB0, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB1, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB2, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB3, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB4, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB5, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB6, mnemonic: "SET", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xB7, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB8, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xB9, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xBA, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xBB, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xBC, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xBD, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xBE, mnemonic: "SET", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xBF, mnemonic: "SET", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC0, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC1, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC2, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC3, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC4, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC5, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC6, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xC7, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC8, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xC9, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xCA, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xCB, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xCC, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xCD, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xCE, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xCF, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD0, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD1, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD2, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD3, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD4, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD5, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD6, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xD7, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD8, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xD9, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xDA, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xDB, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xDC, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xDD, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xDE, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xDF, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE0, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE1, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE2, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE3, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE4, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE5, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE6, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xE7, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE8, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xE9, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xEA, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xEB, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xEC, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xED, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xEE, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xEF, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF0, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF1, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF2, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF3, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF4, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF5, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF6, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xF7, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF8, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xF9, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xFA, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xFB, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xFC, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xFD, mnemonic: "RES", bytes: 2, cycles: &[8] },
    Opcode { opcode: 0xFE, mnemonic: "RES", bytes: 2, cycles: &[12] },
    Opcode { opcode: 0xFF, mnemonic: "RES", bytes: 2, cycles: &[8] }
];

pub const CLOCK_SPEED: u32 = 4_194_304; // 4.194304 MHz
pub const FRAME_RATE: f32 = 59.72746; // 59.72746 Hz
pub const CYCLES_PER_FRAME: u32 = (CLOCK_SPEED as f32 / FRAME_RATE) as u32; // ~69905 cycles per frame

pub const SCREEN_WIDTH: u32 = 160;
pub const SCREEN_HEIGHT: u32 = 144;